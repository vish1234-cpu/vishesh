#pragma checksum "C:\Users\Vishesh Kapoor\source\repos\BlazorBasicsAssignment\Pages\Calculator.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4eec0d881771ce45ce2610a33ca2bed5578dde9e"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlazorBasicsAssignment.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Vishesh Kapoor\source\repos\BlazorBasicsAssignment\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Vishesh Kapoor\source\repos\BlazorBasicsAssignment\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Vishesh Kapoor\source\repos\BlazorBasicsAssignment\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Vishesh Kapoor\source\repos\BlazorBasicsAssignment\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Vishesh Kapoor\source\repos\BlazorBasicsAssignment\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Vishesh Kapoor\source\repos\BlazorBasicsAssignment\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Vishesh Kapoor\source\repos\BlazorBasicsAssignment\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Vishesh Kapoor\source\repos\BlazorBasicsAssignment\_Imports.razor"
using BlazorBasicsAssignment;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Vishesh Kapoor\source\repos\BlazorBasicsAssignment\_Imports.razor"
using BlazorBasicsAssignment.Shared;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/calculator")]
    public partial class Calculator : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 34 "C:\Users\Vishesh Kapoor\source\repos\BlazorBasicsAssignment\Pages\Calculator.razor"
      
    public string text { get; set; } = "";

    public double Final_Result(string s)
    {
        try
        {
            System.Data.DataTable table = new System.Data.DataTable();
            return Convert.ToDouble(table.Compute(s, String.Empty));
        }
        catch (Exception ex)
        {
            throw ex;
        }

    }

    void Zero()
    {
        try
        {

            if (text == "0" && @text != null)
                text = "0";
            else
                text = text + "0";
        }
        catch (Exception ex)
        {
            throw ex;
        }

    }
    void One_Number()
    {
        try
        {

            if (text == "0" && text != null)
                text = "1";
            else
                text = text + "1";
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }
    void Two_Number()
    {
        try
        {

            if (text == "0" && text != null)
                text = "2";
            else
                text = text + "2";
        }
        catch (Exception ex)
        {
            throw ex;
        }

    }
    void Three_Number()
    {
        try
        {

            if (text == "0" && text != null)
                text = "3";
            else
                text = text + "3";
        }
        catch (Exception ex)
        {
            throw ex;
        }

    }
    void Four_Number()
    {
        try
        {

            if (text == "0" && text != null)
                text = "4";
            else
                text = text + "4";
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }
    void Five_Number()
    {
        try
        {

            if (text == "0" && text != null)
                text = "5";
            else
                text = text + "5";
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }
    void Six_Number()
    {
        try
        {

            if (text == "0" && text != null)
                text = "6";
            else
                text = text + "6";
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }
    void Seven_Number()
    {
        try
        {

            if (text == "0" && text != null)
                text = "7";
            else
                text = text + "7";
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }
    void Eight_Number()
    {
        try
        {

            if (text == "0" && text != null)
                text = "8";
            else
                text = text + "8";
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }
    void Nine_Number()
    {
        try
        {

            if (text == "0" && text != null)
                text = "9";
            else
                text = text + "9";
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }
    void Addition()
    {
        try
        {
            text = text + "+";
        }
        catch (Exception ex)
        {

            throw ex;
        }

    }
    void Substraction()
    {
        try
        {
            text = text + "-";
        }
        catch (Exception ex)
        {

            throw ex;
        }
    }
    void Division()
    {
        try
        {
            text = text + "/";
        }
        catch (Exception ex)
        {

            throw ex;
        }

    }
    void Multiply()
    {
        try
        {
            text = text + "*";
        }
        catch (Exception ex)
        {

            throw ex;
        }
    }

    void Dot()
    {

        try
        {
            text = text + ".";
        }
        catch (Exception ex)
        {

            throw ex;
        }
    }
    void Clear()
    {
        text = "0";

    }
    void Equal()
    {
        double results = Final_Result(text);
        text = Convert.ToString(results);
    }


#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
