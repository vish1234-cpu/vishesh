@page "/calculator"
<link rel="stylesheet" href="~/css/calc.css">
<h1 style="color:blue">CALCULATOR</h1>
<hr />
<div id="calculator">
    <div class="top">
        <span @onclick="Clear" class="clear">C</span>
        @*<div class="screen"></div>*@

        <input type="text" @bind="@text" class="calculator-screen z-depth-1" disabled />
    </div>

    <div class="keys">
        <!-- operators and other keys -->
        <span @onclick="Seven_Number">7</span>
        <span @onclick="Eight_Number">8</span>
        <span @onclick="Nine_Number">9</span>
        <span @onclick="Addition" class="operator">+</span>
        <span @onclick="Four_Number">4</span>
        <span @onclick="Five_Number">5</span>
        <span @onclick="Six_Number">6</span>
        <span @onclick="Substraction" class="operator">-</span>
        <span @onclick="One_Number">1</span>
        <span @onclick="Two_Number">2</span>
        <span @onclick="Three_Number">3</span>
        <span @onclick="Division" class="operator">÷</span>
        <span @onclick="Zero">0</span>
        <span @onclick="Dot">.</span>
        <span @onclick="Equal" class="eval">=</span>
        <span @onclick="Multiply" class="operator">x</span>
    </div>
</div>

@code{
    public string text { get; set; } = "";

    public double Final_Result(string s)
    {
        try
        {
            System.Data.DataTable table = new System.Data.DataTable();
            return Convert.ToDouble(table.Compute(s, String.Empty));
        }
        catch (Exception ex)
        {
            throw ex;
        }

    }

    void Zero()
    {
        try
        {

            if (text == "0" && @text != null)
                text = "0";
            else
                text = text + "0";
        }
        catch (Exception ex)
        {
            throw ex;
        }

    }
    void One_Number()
    {
        try
        {

            if (text == "0" && text != null)
                text = "1";
            else
                text = text + "1";
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }
    void Two_Number()
    {
        try
        {

            if (text == "0" && text != null)
                text = "2";
            else
                text = text + "2";
        }
        catch (Exception ex)
        {
            throw ex;
        }

    }
    void Three_Number()
    {
        try
        {

            if (text == "0" && text != null)
                text = "3";
            else
                text = text + "3";
        }
        catch (Exception ex)
        {
            throw ex;
        }

    }
    void Four_Number()
    {
        try
        {

            if (text == "0" && text != null)
                text = "4";
            else
                text = text + "4";
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }
    void Five_Number()
    {
        try
        {

            if (text == "0" && text != null)
                text = "5";
            else
                text = text + "5";
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }
    void Six_Number()
    {
        try
        {

            if (text == "0" && text != null)
                text = "6";
            else
                text = text + "6";
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }
    void Seven_Number()
    {
        try
        {

            if (text == "0" && text != null)
                text = "7";
            else
                text = text + "7";
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }
    void Eight_Number()
    {
        try
        {

            if (text == "0" && text != null)
                text = "8";
            else
                text = text + "8";
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }
    void Nine_Number()
    {
        try
        {

            if (text == "0" && text != null)
                text = "9";
            else
                text = text + "9";
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }
    void Addition()
    {
        try
        {
            text = text + "+";
        }
        catch (Exception ex)
        {

            throw ex;
        }

    }
    void Substraction()
    {
        try
        {
            text = text + "-";
        }
        catch (Exception ex)
        {

            throw ex;
        }
    }
    void Division()
    {
        try
        {
            text = text + "/";
        }
        catch (Exception ex)
        {

            throw ex;
        }

    }
    void Multiply()
    {
        try
        {
            text = text + "*";
        }
        catch (Exception ex)
        {

            throw ex;
        }
    }

    void Dot()
    {

        try
        {
            text = text + ".";
        }
        catch (Exception ex)
        {

            throw ex;
        }
    }
    void Clear()
    {
        text = "0";

    }
    void Equal()
    {
        double results = Final_Result(text);
        text = Convert.ToString(results);
    }

}

<style>



    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font: bold 14px Arial, sans-serif;
    }

    html {
        height: 100%;
        background: white;
        background: radial-gradient(circle, #fff 20%, #ccc);
        background-size: cover;
    }

    #calculator {
        width: 325px;
        height: auto;
        margin: 100px auto;
        padding: 20px 20px 9px;
        background: #9dd2ea;
        background: linear-gradient(#9dd2ea, #8bceec);
        border-radius: 3px;
        box-shadow: 0px 4px #009de4, 0px 10px 15px rgba(0, 0, 0, 0.2);
    }

    .top span.clear {
        float: left;
    }

    .top .screen {
        height: 40px;
        width: 212px;
        float: right;
        padding: 0 10px;
        background: rgba(0, 0, 0, 0.2);
        border-radius: 3px;
        box-shadow: inset 0px 4px rgba(0, 0, 0, 0.2);
        font-size: 17px;
        line-height: 40px;
        color: white;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);
        text-align: right;
        letter-spacing: 1px;
    }

    .keys, .top {
        overflow: hidden;
    }

        .keys span, .top span.clear {
            float: left;
            position: relative;
            top: 0;
            cursor: pointer;
            width: 66px;
            height: 36px;
            background: white;
            border-radius: 3px;
            box-shadow: 0px 4px rgba(0, 0, 0, 0.2);
            margin: 0 7px 11px 0;
            color: #888;
            line-height: 36px;
            text-align: center;
            user-select: none;
            transition: all 0.2s ease;
        }

            .keys span.operator {
                background: #FFF0F5;
                margin-right: 0;
            }

            .keys span.eval {
                background: #f1ff92;
                box-shadow: 0px 4px #9da853;
                color: #888e5f;
            }

        .top span.clear {
            background: #ff9fa8;
            box-shadow: 0px 4px #ff7c87;
            color: white;
        }

        .keys span:hover {
            background: #9c89f6;
            box-shadow: 0px 4px #6b54d3;
            color: white;
        }

        .keys span.eval:hover {
            background: #abb850;
            box-shadow: 0px 4px #717a33;
            color: #ffffff;
        }

        .top span.clear:hover {
            background: #f68991;
            box-shadow: 0px 4px #d3545d;
            color: white;
        }

        .keys span:active {
            box-shadow: 0px 0px #6b54d3;
            top: 4px;
        }

        .keys span.eval:active {
            box-shadow: 0px 0px #717a33;
            top: 4px;
        }

        .top span.clear:active {
            top: 4px;
            box-shadow: 0px 0px #d3545d;
        }
</style>
